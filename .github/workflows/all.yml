name: build-all

on:
  # yamllint disable-line rule:truthy
  workflow_dispatch:
  schedule:
    - cron: '10 2 * * 1'

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        dockerimage:
          - almalinux8-ansible
          - almalinux9-ansible
          - almalinux10-ansible
          - alpine-ansible
          - amazon2-ansible
          - amazon2023-ansible
          - arch-ansible
          - centosstream8-ansible
          - centosstream9-ansible
          - rocky8-ansible
          - rocky9-ansible
          - rocky10-ansible
          - debian11-ansible
          - debian12-ansible
          - debian13-ansible
          - fedora37-ansible
          - fedora38-ansible
          - fedora39-ansible
          - fedora40-ansible
          - opensuse_tumbleweed-ansible
          - openwrt-ansible
          - oracle7-ansible
          - ubuntu1804-ansible
          - ubuntu2004-ansible
          - ubuntu2204-ansible
          - ubuntu2404-ansible
        platforms:
          - linux/amd64
            # #- linux/arm64
        exclude:
          - dockerimage: oracle7-ansible
            platforms: linux/arm64
          - dockerimage: arch-ansible
            platforms: linux/arm64
          - dockerimage: centos7-ansible
            platforms: linux/arm64

    steps:
      -
        name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and export to Docker
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.dockerimage }}-latest
          tags: docker-${{ matrix.dockerimage }}:test
          platforms: ${{ matrix.platforms }}
          load: true
      -
        name: Test
        run: |
          docker run --rm docker-${{ matrix.dockerimage }}:test
      -
        name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/master'
      -
        name: Build and push to ghcr.io
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.dockerimage }}-latest
          push: true
          tags: ghcr.io/dev-sec/docker-${{ matrix.dockerimage }}:latest
          platforms: ${{ matrix.platforms }}
        if: github.ref == 'refs/heads/master'
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: github.ref == 'refs/heads/master'
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.dockerimage }}-latest
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/docker-${{ matrix.dockerimage }}:latest
          platforms: ${{ matrix.platforms }}
        if: github.ref == 'refs/heads/master'
      -
        name: Update repo description
        uses: peter-evans/dockerhub-description@v4
        if: github.repository == 'rndmh3ro/docker-ansible' && github.ref == 'refs/heads/master'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/docker-${{ matrix.dockerimage }}
          short-description: ${{ github.event.repository.description }}
